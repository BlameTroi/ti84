<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Z80 Assembly</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<link rel="Stylesheet" href="normal.css">
</head>
<body>
<h1>Z80 Assembly - Index</h1>
<h2>Introduction</h2>
<p>This document is intended for everyone who wants to learn Z80 programming in its depth. If you already know the basics of programming, you should just keep reading, I will explain everything from the very beginning. However, if you have no programming experience whatsoever, assembly is surely not for you. Start out with a high-level language, it is much easier, and will help understanding assembly later a great deal. But if you still decide to go on, read everything very carefully.</p>
<p>This guide is not yet finished. I decided to release it, however, to receive feedback about it as early as possible. So don&rsquo;t hesitate to share your opinion with me at <a href="mailto:patai_gergely@fastmail.fm">patai_gergely@fastmail.fm</a>. I will consider every idea for the next release.</p>
<h2>About the author</h2>
<p>I&rsquo;m Patai Gergely (to make things clear, Patai is my family name), a Hungarian university student at the time of writing this guide. I was born in 1982, and started out with a C64 at the age of 8. I used it mostly for gaming, and never went beyond learning Basic. After obtaining a PC, I started programming in Pascal, and at the age of about 12 I got to know the very basics of assembly. Since those times I wrote several megabytes of useless source, like 3d engines, MOD players and loads of other crap for my own pleasure. As I became an international baccalaureate student, I had to buy a TI-83, which opened my way into the Z80 world. I learnt Z80 assembly in about two days (based on my previous knowledge), and wrote Traz in a couple of hours as a CAS (Creativity-Activity-Service, not &ldquo;Computer Algebra System&rdquo;) project. Currently it seems that I&rsquo;m to become an engineer in 2006... I just hope you will find this guide useful.</p>
<p>You can find my personal homepage at <a href="http://www.hszk.bme.hu/~pg429/">http://www.hszk.bme.hu/~pg429/</a>.</p>
<h2>References</h2>
<h3>Books</h3>
<ul>
<li>Ligeti Gábor, Szervánszky György: A ZX Spectrum programozása (ZX Spectrum Programming), Budapest, 1985</li>
<li>Agárdi Gábor: Gyakorlati Assembly (Assembly in Practice), Budapest, 199?</li>
<li>Gál Tibor: Digitális rendszerek II. (Digital Systems), Budapest, 2002</li>
</ul>
<h3>On-line materials</h3>
<ul>
<li><a href="http://www.ticalc.org/pub/text/z80/asmguru.zip">James Matthews: ASM83 Guru</a></li>
<li><a href="http://www.ticalc.org/pub/text/z80/asmteach.zip">Greg Parker: TI-85 Assembler Programming</a></li>
<li><a href="http://www.ticalc.org/pub/text/z80/z80_reference.txt">Devin Gardner: The Complete Z80 OP-Code Referece</a></li>
<li>Zilog: Z380 Microprocessor &ndash; Product Specification</li>
<li><a href="http://www.ticalc.org">The whole ticalc.org archive</a></li>
</ul>
<h2>The Basics (2004-02-02)</h2>
<ul>
<li><a href="read1st.htm">Read this first!</a></li>
</ul>
<ul>
<li><a href="part1.htm">Assembly in general</a></li>
<li><a href="part1.htm#compiling">Compiling programs</a></li>
<li><a href="part1.htm#numbers">Data and numbers</a></li>
<li><a href="part1.htm#registers">Registers</a></li>
<li><a href="part1.htm#variables">Variables in assembly</a></li>
<li><a href="part1.htm#ld">The LD instruction in detail</a></li>
<li><a href="part1.htm#stack">Stack operations</a></li>
</ul>
<h2>Simple Structures (2003-03-07)</h2>
<ul>
<li><a href="part2.htm">Working with arrays</a></li>
<li><a href="part2.htm#branches">Conditional branches</a></li>
<li><a href="part2.htm#jumps">Relative and absolute jumps</a></li>
<li><a href="part2.htm#subroutines">Subroutines</a></li>
</ul>
<h2>Simple Tasks (2003-03-07)</h2>
<ul>
<li><a href="part3.htm">Working with data</a></li>
<li><a href="part3.htm#sum">Summing one-byte numbers</a></li>
<li><a href="part3.htm#addition">Adding large numbers</a></li>
<li><a href="part3.htm#moving">Moving data blocks</a></li>
<li><a href="part3.htm#manipulate">Manipulating data blocks</a> (selection, sorting, searching)</li>
</ul>
<h2>Multiplication and Division (2003-03-07)</h2>
<ul>
<li><a href="part4.htm">First approach</a></li>
<li><a href="part4.htm#shift">Shift instructions</a></li>
<li><a href="part4.htm#mul8">Fast 8-bit multiplication</a></li>
<li><a href="part4.htm#div8">Fast 8-bit division</a></li>
<li><a href="part4.htm#mul16">Fast 16-bit multiplication</a></li>
<li><a href="part4.htm#other">Other aspects</a></li>
</ul>
<h2>Common Techniques (2004-02-16)</h2>
<ul>
<li><a href="part5.htm">Composite data structures</a></li>
<li><a href="part5.htm#fixed">Fixed-point arithmetic</a></li>
<li><a href="part5.htm#lut">Look-up tables (LUTs)</a></li>
</ul>
<hr>
<h2>Appendices</h2>
<ul>
<li><a href="app1.htm">Z80 instructions explained</a> (2003-03-07)</li>
</ul>
</body>
</html>
